"use strict";exports.id=7947,exports.ids=[7947],exports.modules={1405:(e,r,a)=>{a.d(r,{d:()=>n,e:()=>l,loadImage:()=>o});var t=a(9167);let i=/(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d.]+%?\))|currentcolor/gi;async function o(e){return new Promise(r=>{e.loading=!0;let a=new Image;e.element=a,a.addEventListener("load",()=>{e.loading=!1,r()}),a.addEventListener("error",()=>{e.element=void 0,e.error=!0,e.loading=!1,(0,t.jl)().error(`${t.gK} loading image: ${e.source}`),r()}),a.src=e.source})}async function n(e){if("svg"!==e.type){await o(e);return}e.loading=!0;let r=await fetch(e.source);r.ok?e.svgData=await r.text():((0,t.jl)().error(`${t.gK} Image not found`),e.error=!0),e.loading=!1}function l(e,r,a,n){let l=function(e,r,a){let{svgData:o}=e;if(!o)return"";let n=(0,t.vz)(r,a);if(o.includes("fill"))return o.replace(i,()=>n);let l=o.indexOf(">");return`${o.substring(0,l)} fill="${n}"${o.substring(l)}`}(e,a,n.opacity?.value??1),d={color:a,gif:r.gif,data:{...e,svgData:l},loaded:!1,ratio:r.width/r.height,replaceColor:r.replaceColor,source:r.src};return new Promise(r=>{let a=new Blob([l],{type:"image/svg+xml"}),t=URL||window.URL||window.webkitURL||window,i=t.createObjectURL(a),n=new Image;n.addEventListener("load",()=>{d.loaded=!0,d.element=n,r(d),t.revokeObjectURL(i)});let s=async()=>{t.revokeObjectURL(i);let a={...e,error:!1,loading:!0};await o(a),d.loaded=!0,d.element=a.element,r(d)};n.addEventListener("error",()=>void s()),n.src=i})}},9664:(e,r,a)=>{a.d(r,{loadImageShape:()=>o});var t=a(1405),i=a(9167);async function o(e,r=!0){e.loadImage||(e.loadImage=async r=>{if(!r.name&&!r.src)throw Error(`${i.gK} no image source provided`);if(e.images||(e.images=[]),!e.images.find(e=>e.name===r.name||e.source===r.src))try{let i;let o={gif:r.gif??!1,name:r.name??r.src,source:r.src,type:r.src.substring(r.src.length-3),error:!1,loading:!0,replaceColor:r.replaceColor,ratio:r.width&&r.height?r.width/r.height:void 0};if(e.images.push(o),r.gif){let{loadGifImage:e}=await a.e(3083).then(a.bind(a,3083));i=e}else i=r.replaceColor?t.d:t.loadImage;await i(o)}catch{throw Error(`${i.gK} ${r.name??r.src} not found`)}});let{ImagePreloaderPlugin:o}=await a.e(191).then(a.bind(a,191)),{ImageDrawer:n}=await a.e(3899).then(a.bind(a,3899)),l=new o(e);await e.addPlugin(l,r),await e.addShape(["image","images"],new n(e),r)}}};